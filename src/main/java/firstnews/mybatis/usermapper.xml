<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 为这个mapper指定一个唯一的namespace，namespace的值习惯上设置成包名+sql映射文件名，这样就能够保证namespace的值是唯一的
例如namespace="me.gacl.mapping.userMapper"就是me.gacl.mapping(包名)+userMapper(userMapper.xml文件去除后缀)
-->
<mapper namespace="firstnews.dao.UserDao">
    <!-- 在select标签中编写查询的SQL语句， 设置select标签的id属性为getUser，id属性值必须是唯一的，不能够重复
 使用parameterType属性指明查询时使用的参数类型，resultType属性指明查询返回的结果集类型
resultType="me.gacl.domain.User"就表示将查询结果封装成一个User类的对象返回
User类就是users表所对应的实体类
-->
    <!--
    <resultMap type="firstnews.domain.User" id="user">
        <result property="name" column="name"/>
        <result property="password" column="password"/>
    </resultMap>
    <parameterMap type="firstnews.domain.User" id="user">
        <parameter property="name" resultMap="userbyname"/>
        <parameter property="password" resultMap="userbyname"/>
    </parameterMap>
-->
    <!--根据name查询得到一个user对象-->
    <select id="get" parameterType="String"
            resultType="firstnews.domain.User">
        SELECT *
        FROM user
        WHERE name = #{name}
    </select>

    <!--注册用户存入user表-->
    <insert id="add" parameterType="firstnews.domain.User">
        INSERT INTO user (name, password) VALUES (#{name}, #{password})
    </insert>

    <!--修改密码-->
    <update id="update" parameterType="firstnews.domain.User">
        update user set password=#{password} where name=#{name};
    </update>
</mapper>
